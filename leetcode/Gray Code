/*
The gray code is a binary numeral system where two successive values differ in only one bit.

Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.

For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:

00 - 0
01 - 1
11 - 3
10 - 2
Note:
For a given n, a gray code sequence is not uniquely defined.

For example, [0,2,3,1] is also a valid gray code sequence according to the above definition.

For now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.
*/

/*
gray code的规律
For example, when n=3, we can get the result based on n=2. 00,01,11,10 -> (000,001,011,010 ) (110,111,101,100).
总是在前面加1
注意这是2进制操作，要转换成十进制的
*/

class Solution {
public:
    vector<int> grayCode(int n) 
    {
        vector<int> result;
        result.push_back(0);
        
        for (int i = 0; i < n; ++i)
        {
            for (int j = result.size() - 1; j >= 0; --j) //必须从后往前遍历，因为后续插入操作会改变size()的大小
            {
                result.push_back(result[j] | 1 << i);
            }
        }
        
        return result;
    }
};
