/*
Restore IP Addresses Total Accepted: 17398 Total Submissions: 84779 My Submissions Question Solution 
Given a string containing only digits, restore it by returning all possible valid IP address combinations.

For example:
Given "25525511135",

return ["255.255.11.135", "255.255.111.35"]. (Order does not matter)
*/



class Solution {
public:
    vector<string> restoreIpAddresses(string s) 
    {
        vector<string> result;
        if (s.length() < 4 || s.length() > 12) return result; //排除非法值
        
        for (int i = 1; i < 4; ++i) //直接分成4段，每段分别考虑自己的是否合法，最后再拼起来，类似暴力解法，但是很清晰
        {
            string first = s.substr(0, i); //注意substr的用法

            if (!isValid(first))  //如果不合法则继续再找
                continue;
            for (int j = 1; i + j < s.length() && j < 4; ++j)
            {
                string second = s.substr(i, j);
                if (!isValid(second))
                    continue;
                for (int k = 1; i + j + k < s.length() && k < 4; ++k)
                {
                    string third = s.substr(i + j, k);
                    string fourth = s.substr(i + j + k);
                    if (!isValid(third) || !isValid(fourth))
                        continue;
                    string temp = first + '.' + second + '.' + third + '.' + fourth;
                    result.push_back(temp);
                }
            }
        }
            
        
        return result;
    }
    
    bool isValid(string s)
    {
        if (s.size() > 1 && s[0] == '0')
            return false;
        if (stoi(s) <= 255 && stoi(s) >= 0) //注意stoi和atoi的用法
            return true;
        else 
            return false;
    }
};
