/*
Given a set of distinct integers, S, return all possible subsets.

Note:
Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
For example,
If S = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
*/

//位操作的两种用法
//1. 类似于hashmap
//2. 用于与2的n次方相关的数字
//位操作，每次只能操作一位，如果想把该数的所有为1的位都操作，必须使用循环

class Solution {
public:
    vector<vector<int> > subsets(vector<int> &S) 
    {
        sort(S.begin(), S.end()); //要求子集内元素排列非递减
        int len = S.size();
        int size = pow(2, len);
        vector<vector<int> > result (size, vector<int>());//二维一定要初始化，不然引用下标时会越界
        
        for (int i = 0; i < len; ++i)
        {
            for (int j = 0; j < size; ++j)
            {
                if ((j >> i) & 1)
                    result[j].push_back(S[i]);
            }
        }
        
        return result;
    }
};
