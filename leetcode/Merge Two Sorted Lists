/*
Merge two sorted linked lists and return it as a new list. 
The new list should be made by splicing together the nodes of the first two lists.
*/
//和数组合并不太一样，要仔细考虑


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) 
    {
        if (l1 == NULL || l2 == NULL) return l1 == NULL ? l2 : l1;
        
        ListNode *head;
        if (l1->val <= l2->val) 
        {
            head = l1;
            l1 = l1->next;
        }
        else 
        {
            head = l2;
            l2 = l2->next;
        }
        ListNode *p = head;
        
        while (l1 != NULL && l2 != NULL)
        {
            if (l1->val <= l2->val)
            {
                p->next = l1;
                l1 = l1->next;
            }
            else
            {
                p->next = l2;
                l2 = l2->next;
            }
            p = p->next;
        }
        
        l1 == NULL ? p->next = l2 : p->next = l1; 
        
        
        return head;
    }
};
