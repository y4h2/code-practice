/*
Determine if a Sudoku is valid, according to: Sudoku Puzzles - The Rules.

The Sudoku board could be partially filled, where empty cells are filled with the character '.'.


A partially filled sudoku which is valid.

Note:
A valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.
*/

//位操作更为方便



class Solution {
public:
    bool isValidSudoku(vector<vector<char> > &board) 
    {
        int mask = 0;
        int val = 0;
        for (int i = 0; i < 9; ++i)
        {
            mask = 0;
            for (int j = 0; j < 9; ++j)
            {
                if (board[i][j] != '.')
                {
                    val = board[i][j] - '0';
                    if ((mask & (1 << val)) != 0)
                        return false;
                    else
                        mask |= (1 << val);
                }
            }
        }
        
        for (int j = 0; j < 9; ++j)
        {
            mask = 0;
            for (int i = 0; i < 9; ++i)
            {
                if (board[i][j] != '.')
                {
                    val = board[i][j] - '0';
                    if ((mask & (1 << val)) != 0)
                        return false;
                    else
                        mask |= (1 << val);
                }
            }
        }
        
        
        for (int i = 0; i < 9; i += 3)
        {
            for (int j = 0; j < 9; j += 3)
            {
                mask = 0;
                for (int row = i; row <= i + 2; ++row)
                {
                    for (int col = j; col <= j + 2; ++col)
                    {
                        if (board[row][col] != '.')
                        {
                            val = board[row][col] - '0';
                            if ((mask & (1 << val)) != 0)
                                return false;
                            else
                                mask |= (1 << val);
                        }
                    }
                }
                
            }
        }
        
        
        return true;
    }
};
