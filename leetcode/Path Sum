/*
Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \      \
        7    2      1
return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.
*/


/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode *root, int sum) 
    {
        if (root == NULL) return false;
        
        sum -= root->val;
        if (root->left == NULL && root->right == NULL) return sum == 0; //只在叶子节点判断是否成立
        else
            return hasPathSum(root->right, sum) || hasPathSum(root->left, sum);//由于树每次开头都会判断是否为空，所以递归的时候不用再考虑

    }
};
