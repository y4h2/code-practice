/*
Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.

click to show follow up.

Follow up:
Did you use extra space?
A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?
*/

class Solution {
public:
    void setZeroes(vector<vector<int> > &matrix) 
    {
        int flag = 0; //记录[0][0]位置是否应该被标记为0
        for (int i = 0; i < matrix.size(); ++i)
        {
            if (matrix[i][0] == 0) flag = 1; //单独考虑第一列是否有0存在
            for (int j = 1; j < matrix[0].size(); ++j) //j从1开始就可以在matrix[0][0] == 0的情况下，避免把第一列和第一行全设为0
            {
                if (matrix[i][j] == 0)
                {
                    matrix[0][j] = 0;
                    matrix[i][0] = 0;
                }
            }
        }
        
        for (int i = matrix.size() - 1; i >= 0; --i)
        {
            for (int j = matrix[0].size() - 1; j >= 1; --j)
            {
                if (matrix[0][j] == 0 || matrix[i][0] == 0)
                {
                    matrix[i][j] = 0;
                }
            }
            if (flag == 1)
                matrix[i][0] = 0; //第一列有0的情况单独处理
        }
        
        
    }
};
